package main

import (
	"log"

	"github.com/streadway/amqp"
)

func failOnError(err error, msg string) {
	if err != nil {
		log.Fatalf("%s: %s", msg, err)
	}
}

func main() {
	conn, err := amqp.Dial("amqp://guest:guest@localhost:5672/")
	failOnError(err, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ RabbitMQ")
	defer conn.Close()

	ch, err := conn.Channel()
	failOnError(err, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∫–∞–Ω–∞–ª")
	defer ch.Close()

	q, err := ch.QueueDeclare(
		"team_events",
		false,
		false,
		false,
		false,
		nil,
	)
	failOnError(err, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—ä—è–≤–∏—Ç—å –æ—á–µ—Ä–µ–¥—å")

	msgs, err := ch.Consume(
		q.Name,
		"",
		true,
		false,
		false,
		false,
		nil,
	)
	failOnError(err, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ—á–µ—Ä–µ–¥—å")

	log.Println(" –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ –∫–æ–º–∞–Ω–¥–∞—Ö. –î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ CTRL+C")

	forever := make(chan bool)
	go func() {
		for msg := range msgs {
			log.Printf("üì© –ü–æ–ª—É—á–µ–Ω–æ: %s", msg.Body)
		}
	}()

	<-forever
}
